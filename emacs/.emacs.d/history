;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(minibuffer-history tmm--history compile-history shell-command-history gud-gdb-history ido-buffer-history woman-topic-history yes-or-no-p-history buffer-name-history extended-command-history evil-ex-history ido-file-history))
(setq minibuffer-history '("0" "neotree" "hideshowvis" "0" ":q" "1" ":q"))
(setq tmm--history '("a==>About GNU                C-h g" "T==>Emacs Tutorial           C-h t" "t==>Emacs Tutorial (choose language)..." "F==>Emacs FAQ              C-h C-f" "n==>Emacs News               C-h n" "E==>Emacs Known Problems   C-h C-p" "h==>How to Report a Bug" "b==>Send Bug Report..." "e==>Emacs Psychotherapist" "S==>Search Documentation" "d==>Describe" "r==>Read the Emacs Manual    C-h r" "m==>More Manuals" "s==>Search Built-in Packages  C-h p" "f==>Finding Extra Packages  C-h C-e" "g==>Getting New Versions   C-h C-o" "c==>Copying Conditions     C-h C-c" "0==>(Non)Warranty          C-h C-w" "A==>About Emacs            C-h C-a" "a==>About GNU                C-h g" "T==>Emacs Tutorial           C-h t" "t==>Emacs Tutorial (choose language)..." "F==>Emacs FAQ              C-h C-f" "n==>Emacs News               C-h n" "E==>Emacs Known Problems   C-h C-p" "h==>How to Report a Bug" "b==>Send Bug Report..." "e==>Emacs Psychotherapist" "S==>Search Documentation" "d==>Describe" "r==>Read the Emacs Manual    C-h r" "m==>More Manuals" "s==>Search Built-in Packages  C-h p" "f==>Finding Extra Packages  C-h C-e" "g==>Getting New Versions   C-h C-o" "c==>Copying Conditions     C-h C-c" "0==>(Non)Warranty          C-h C-w" "A==>About Emacs            C-h C-a" "a==>About GNU                C-h g" "T==>Emacs Tutorial           C-h t" "t==>Emacs Tutorial (choose language)..." "F==>Emacs FAQ              C-h C-f" "n==>Emacs News               C-h n" "E==>Emacs Known Problems   C-h C-p" "h==>How to Report a Bug" "b==>Send Bug Report..." "e==>Emacs Psychotherapist" "S==>Search Documentation" "d==>Describe" "r==>Read the Emacs Manual    C-h r" "m==>More Manuals" "s==>Search Built-in Packages  C-h p" "f==>Finding Extra Packages  C-h C-e" "g==>Getting New Versions   C-h C-o" "c==>Copying Conditions     C-h C-c" "0==>(Non)Warranty          C-h C-w" "A==>About Emacs            C-h C-a" "a==>About GNU                C-h g" "T==>Emacs Tutorial           C-h t" "t==>Emacs Tutorial (choose language)..." "F==>Emacs FAQ              C-h C-f" "n==>Emacs News               C-h n" "E==>Emacs Known Problems   C-h C-p" "h==>How to Report a Bug" "b==>Send Bug Report..." "e==>Emacs Psychotherapist" "S==>Search Documentation" "d==>Describe" "r==>Read the Emacs Manual    C-h r" "m==>More Manuals" "s==>Search Built-in Packages  C-h p" "f==>Finding Extra Packages  C-h C-e" "g==>Getting New Versions   C-h C-o" "c==>Copying Conditions     C-h C-c" "0==>(Non)Warranty          C-h C-w" "A==>About Emacs            C-h C-a" "a==>About GNU                C-h g"))
(setq compile-history '("cd ..; make run" "cd ..; make -k " "make -k " "cc a.c -o a" "make -k " "make -k code " "make -k "))
(setq shell-command-history '("gcc code.c -o code;./code < input" "gcc code.c -o code;./code" "gcc code.c -o code;./code < input" "gcc code.c -o code;./code" "gcc insertionsort.c -o code;./code" "gcc insertionsort.c -o code.c;./code" "shell" "ls" "ls ~/.emacs.d/snippets/c-mode/" "term" "shell" "gcc code.c -o code;" "gcc code.c -o code;./code" "gdb" "gcc code.c -o code;./code" "gdb code" "ls" "cmd" "touch input.in" "gcc code.c -o code;./code" "make" "ping google.com" "tree" "gcc code.c -o code;./code" "tree" "ls" "code.c" "gcc code.c -o code;./code" "code.c" "gcc code.c -o code;./code" "gcc "))
(setq gud-gdb-history '("gdb -i=mi "))
(setq ido-buffer-history '("code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" " *code-conversion-work*"))
(setq yes-or-no-p-history '("yes" "o" "yes" "NO" "no" "o" "yes"))
(setq buffer-name-history '("code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" "*shell*" "code.c" " *code-conversion-work*" "code.c"))
(setq extended-command-history '("compile" "run-at-time" "compile" "origami-open-all-nodes" "kill-emacs" "origami-toggle-all-nodes" "kill-emacs" "neotree" "kill-emacs" "neotree-show" "kill-emacs" "neotree-enter" "restart-emacs" "neotree-enter" "kill-emacs" "neotree-enter" "neotree" "restart-emacs" "neotree" "restart-emacs" "neotree" "package-install" "kill-emacs" "origami-show-only-node" "origami-toggle-node" "origami-show-only-node" "kill-emacs" "origami-close-node" "kill-emacs" "origami-toggle-all-nodes" "origami-close-node" "origami-toggle-all-nodes" "origami-close-node" "origami-mode" "origami-close-node" "origami-close-all-nodes" "origami-toggle-all-nodes" "kill-emacs" "vimish-fold" "vimish-fold-toggle" "vimish-fold" "vimish-fold-delete" "vimish-fold" "vimish-fold-toggle" "vimish-fold-toggle-all" "vimish-fold-toggle" "kill-emacs" "vimish-fold-global-mode" "vimish-fold-toggle" "vimish-fold-global-mode" "vimish-fold-toggle" "vimish-fold" "vimish-fold-toggle-all" "restart-emacs" "kill-emacs" "package-install" "show-all" "compile" "shell" "compile" "restart-emacs" "server-force-delete" "switch-to-buffer" "shell" "switch-to-buffer" "shell" "switch-to-buffer" "compile" "switch-to-buffer" "compile" "switch-to-buffer" "compile" "server-force-delete" "shell" "compile" "next-buffer" "gdb" "restart-emacs" "server-force-delete" "kill-buffer" "eval-buffer" "restart-emacs"))
(setq evil-ex-history '(#("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("we" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("restart-emacs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1))))
(setq ido-file-history '("bytecode.h" ".emacs" "algorithm.c" "activation_layer.c" ".emacs" "Makefile" ".emacs" "matrix.c" "README" "Makefile" ".emacs" "smtp.c" "FindLibWebSockets.cmake" "Kconfig" "Makefile" ".emacs" "config" ".emacs" "config" "example.c" "api.c" "hiredis.h" "example.c" "simple_crawler.c" "example.c" "api.c" "codejam.rb" "Makefile" "runtest" "Makefile" "code.c" ".emacs"))
(setq evil-jumps-history '((341 "/home/zautomata/Opensource/dots/bin/insertion.sort.c") (117 "/home/zautomata/Opensource/dots/bin/insertion.sort.c") (341 "/home/zautomata/Opensource/dots/bin/insertion.sort.c") (1 "/home/zautomata/upwork/10usd/01b558f117b7af4bdd/ports.json") (5082 "/home/zautomata/repocode/wkhtmltopdf/src/lib/outline.cc") (1 "/home/zautomata/repocode/wkhtmltopdf/src/shared/arghandler.cc") (1113 "/home/zautomata/repocode/wkhtmltopdf/src/shared/arghandler.cc") (1172 "/home/zautomata/repocode/wkhtmltopdf/src/shared/arghandler.cc") (324 "/home/zautomata/repocode/wkhtmltopdf/src/shared/arghandler.cc") (4022 "/home/zautomata/repocode/wkhtmltopdf/examples/pdf_c_api.c") (4020 "/home/zautomata/repocode/wkhtmltopdf/examples/pdf_c_api.c") (4022 "/home/zautomata/repocode/wkhtmltopdf/examples/pdf_c_api.c") (1001 "/home/zautomata/repocode/wkhtmltopdf/examples/pdf_c_api.c") (211 "/home/zautomata/Opensource/hackspree.c/src/get_tournaments.rb") (35 "/home/zautomata/Opensource/hackspree.c/src/codejam_crawler.rb") (4377 "/home/zautomata/Opensource/hackspree.c/src/codejam_crawler.rb") (95 "/home/zautomata/Opensource/hackspree.c/src/get_tournaments.rb") (1 "/home/zautomata/Opensource/hackspree.c/src/get_top_solutions.rb") (314 "/home/zautomata/Opensource/hackspree.c/src/codejam_crawler.rb") (3908 "/home/zautomata/Opensource/hackspree.c/src/codejam_crawler.rb") (1793 "/home/zautomata/Opensource/hackspree.c/src/codejam_crawler.rb") (169 "/home/zautomata/Opensource/hackspree.c/src/main.c") (461 "/home/zautomata/repocode/CSpider/core/downloader/downloader.c") (756 "/home/zautomata/repocode/CSpider/core/utils/bloom.c") (1512 "/home/zautomata/repocode/CSpider/core/utils/bloom.c") (766 "/home/zautomata/repocode/CSpider/core/utils/bloom.c") (2112 "/home/zautomata/repocode/CSpider/core/scheduler/watcher.c") (1 "/home/zautomata/repocode/CSpider/sample/main.c") (223 "/home/zautomata/Opensource/hackspreeorg/spider/spider.py") (15 "/home/zautomata/Opensource/hackspreeorg/spider/spider.py") (4205 "/home/zautomata/repocode/libdeep/src/autocoder.h") (1 "/home/zautomata/repocode/libdeep/src/autocoder.h") (22012 "/home/zautomata/repocode/libdeep/src/autocoder.c") (673 "/home/zautomata/repocode/libdeep/src/autocoder.c") (1280 "/home/zautomata/repocode/diffutils/src/cmp.c") (17782 "/home/zautomata/repocode/diffutils/src/cmp.c") (42 "/home/zautomata/repocode/diffutils/src/cmp.c") (10146 "/home/zautomata/repocode/diffutils/src/analyze.c") (45 "/home/zautomata/repocode/diffutils/src/Makefile.am") (4503 "/home/zautomata/repocode/diffutils/src/Makefile.in") (10146 "/home/zautomata/repocode/diffutils/src/analyze.c") (19516 "/home/zautomata/repocode/diffutils/src/analyze.c") (19219 "/home/zautomata/repocode/diffutils/src/analyze.c") (1 "/home/zautomata/repocode/diffutils/src/analyze.c") (721 "/home/zautomata/repocode/jq/src/bytecode.h") (1541 "/home/zautomata/repocode/jq/src/util.h") (1139 "/home/zautomata/repocode/jq/src/util.h") (1521 "/home/zautomata/repocode/jq/src/util.h") (31 "/home/zautomata/repocode/jq/src/util.h") (4741 "/home/zautomata/repocode/jq/src/bytecode.c") (3647 "/home/zautomata/repocode/jq/src/bytecode.c") (4265 "/home/zautomata/repocode/jq/src/bytecode.c") (1063 "/home/zautomata/repocode/jq/src/bytecode.c") (4741 "/home/zautomata/repocode/jq/src/bytecode.c") (123 "/home/zautomata/repocode/jq/src/bytecode.c") (12588 "/home/zautomata/repocode/jq/src/builtin.jq") (3066 "/home/zautomata/repocode/jq/src/builtin.jq") (1 "/home/zautomata/repocode/jq/src/builtin.h") (56555 "/home/zautomata/repocode/jq/src/builtin.c") (2881 "/home/zautomata/repocode/jq/src/builtin.c") (839 "/home/zautomata/repocode/jq/src/builtin.c") (293 "/home/zautomata/repocode/openbsdsrc/distrib/alpha/bsd.rd/Makefile") (2049 "/home/zautomata/repocode/openbsdsrc/bin/cat/cat.1") (9500 "/home/zautomata/repocode/darknet/src/gemm.c") (1 "/home/zautomata/repocode/darknet/src/gemm.c") (95 "/home/zautomata/repocode/darknet/src/gemm.c") (1 "/home/zautomata/repocode/darknet/src/demo.h") (9490 "/home/zautomata/repocode/darknet/src/demo.c") (4713 "/home/zautomata/repocode/darknet/src/deconvolutional_kernels.cu") (70 "/home/zautomata/repocode/darknet/src/deconvolutional_kernels.cu") (3584 "/home/zautomata/repocode/darknet/src/deconvolutional_kernels.cu") (4060 "/home/zautomata/repocode/darknet/src/cuda.c") (356 "/home/zautomata/repocode/darknet/src/crop_layer.c") (2759 "/home/zautomata/repocode/darknet/src/crop_layer.c") (1 "/home/zautomata/repocode/darknet/src/classifier.h") (5617 "/home/zautomata/repocode/darknet/src/blas.c") (7589 "/home/zautomata/repocode/darknet/src/blas.c") (6156 "/home/zautomata/repocode/darknet/src/blas.c") (7589 "/home/zautomata/repocode/darknet/src/blas.c") (2392 "/home/zautomata/repocode/darknet/src/activations.c") (962 "/home/zautomata/repocode/darknet/src/activation_layer.c") (2472 "/home/zautomata/repocode/darknet/src/activations.c") (3561 "/home/zautomata/repocode/darknet/src/activations.c") (1085 "/home/zautomata/repocode/darknet/src/utils.c") (13661 "/home/zautomata/.emacs") (12691 "/home/zautomata/.emacs") (17406 "/home/zautomata/.emacs") (16408 "/home/zautomata/.emacs") (13599 "/home/zautomata/.emacs") (18970 "/home/zautomata/.emacs") (18955 "/home/zautomata/.emacs") (18970 "/home/zautomata/.emacs") (18955 "/home/zautomata/.emacs") (18664 "/home/zautomata/.emacs") (4131 "/home/zautomata/.emacs") (1412 "/home/zautomata/repocode/darknet/src/utils.c") (3801 "/home/zautomata/.emacs") (1412 "/home/zautomata/repocode/darknet/src/utils.c") (4200 "/home/zautomata/.emacs")))
