 -*- mode: snippet -*-
# name: string.searching.kmp
# key: string.searching.kmp
# --
/**
* KMP vs Naive: http://www.personal.kent.edu/~rmuhamma/Algorithms/MyAlgorithms/StringMatch/kuthMP.htm
* Understand KMP: http://jakeboxer.com/blog/2009/12/13/the-knuth-morris-pratt-algorithm-in-my-own-words/
*/

#include <stdio.h>
#include <string.h>

int main(void) {
const char* needle = "abab";
int back[strlen(needle) + 1], status = 0;
const char* haystack = "abababab";
int len = strlen(needle);
back[0] = 0;

for (int i = 1; i < len; i++) {
back[i] = status;
while (status && needle[i] != needle[status]) {
status = back[status - 1];
}
if (needle[i] == needle[status]) {
status++;
}
}

back[len] = status;

status = 0;
int i=0;
while (haystack[i]) {
while ((haystack[i] != needle[status] || status == len) && back[status] != status) {
status = back[status];
}
if (haystack[i] == needle[status]) status++;
if (status == len) printf("%d\n",i-len+1);
i++;
}
}